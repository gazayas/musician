{
  "name": "is-retry-allowed",
  "version": "1.1.0",
  "description": "My prime module",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/floatdrop/is-retry-allowed"
  },
  "author": {
    "name": "Vsevolod Strukchinsky",
    "email": "floatdrop@gmail.com",
    "url": "github.com/floatdrop"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "files": [
    "index.js"
  ],
  "keywords": [],
  "dependencies": {},
  "devDependencies": {
    "ava": "^0.8.0",
    "xo": "^0.12.1"
  },
  "readme": "# is-retry-allowed [![Build Status](https://travis-ci.org/floatdrop/is-retry-allowed.svg?branch=master)](https://travis-ci.org/floatdrop/is-retry-allowed)\n\nIs retry allowed for Error?\n\n\n## Install\n\n```\n$ npm install --save is-retry-allowed\n```\n\n\n## Usage\n\n```js\nconst isRetryAllowed = require('is-retry-allowed');\n\nisRetryAllowed({code: 'ETIMEDOUT'});\n//=> true\n\nisRetryAllowed({code: 'ENOTFOUND'});\n//=> false\n\nisRetryAllowed({});\n//=> true\n```\n\n\n## API\n\n### isRetryAllowed(error)\n\n#### error\n\nType: `object`\n\nObject with `code` property, which will be used to determine retry.\n\n\n## License\n\nMIT Â© [Vsevolod Strukchinsky](http://github.com/floatdrop)\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/floatdrop/is-retry-allowed/issues"
  },
  "homepage": "https://github.com/floatdrop/is-retry-allowed",
  "_id": "is-retry-allowed@1.1.0",
  "dist": {
    "shasum": "7331da0723ff488614cb8c4812c9bfcabe1dd7a2"
  },
  "_from": "is-retry-allowed@^1.0.0",
  "_resolved": "https://registry.npmjs.org/is-retry-allowed/-/is-retry-allowed-1.1.0.tgz"
}
