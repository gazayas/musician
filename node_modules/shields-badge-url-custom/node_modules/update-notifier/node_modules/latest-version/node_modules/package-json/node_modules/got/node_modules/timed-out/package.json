{
  "name": "timed-out",
  "version": "3.0.0",
  "description": "Emit `ETIMEDOUT` or `ESOCKETTIMEDOUT` when ClientRequest is hanged",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/floatdrop/timed-out"
  },
  "author": {
    "name": "Vsevolod Strukchinsky",
    "email": "floatdrop@gmail.com"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "xo && mocha"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "http",
    "https",
    "get",
    "got",
    "url",
    "uri",
    "request",
    "util",
    "utility",
    "simple"
  ],
  "devDependencies": {
    "mocha": "*",
    "xo": "^0.16.0"
  },
  "readme": "# timed-out [![Build Status](https://travis-ci.org/floatdrop/timed-out.svg?branch=master)](https://travis-ci.org/floatdrop/timed-out)\n\n> Timeout HTTP/HTTPS requests\n\nEmit Error object with `code` property equal `ETIMEDOUT` or `ESOCKETTIMEDOUT` when ClientRequest is hanged.\n\n## Usage\n\n```js\nvar get = require('http').get;\nvar timeout = require('timed-out');\n\nvar req = get('http://www.google.ru');\ntimeout(req, 2000); // Set 2 seconds limit\n```\n\n### API\n\n#### timedout(request, time)\n\n##### request\n\n*Required*  \nType: [`ClientRequest`](http://nodejs.org/api/http.html#http_class_http_clientrequest)\n\nThe request to watch on.\n\n##### time\n\n*Required*  \nType: `number`\n\nTime in milliseconds to wait for `connect` event on socket and also time to wait on inactive socket.\n\n## License\n\nMIT Â© [Vsevolod Strukchinsky](floatdrop@gmail.com)\n",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/floatdrop/timed-out/issues"
  },
  "homepage": "https://github.com/floatdrop/timed-out",
  "_id": "timed-out@3.0.0",
  "dist": {
    "shasum": "1e5c59a12db1c8d824e888b9cae163ee713856d6"
  },
  "_from": "timed-out@^3.0.0",
  "_resolved": "https://registry.npmjs.org/timed-out/-/timed-out-3.0.0.tgz"
}
